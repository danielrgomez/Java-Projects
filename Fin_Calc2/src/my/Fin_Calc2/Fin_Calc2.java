/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.Fin_Calc2;




/**
 *
 * @author danielgomezperry
 */
public class Fin_Calc2 extends javax.swing.JFrame {

    /**
     * Creates new form Fin_Calc2
     */
    public Fin_Calc2() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        PeriodsTF = new javax.swing.JTextField();
        InterestTF = new javax.swing.JTextField();
        PVTF = new javax.swing.JTextField();
        PaymentTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        FVTF = new javax.swing.JTextField();
        ResultTF = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        PeriodsRad = new javax.swing.JRadioButton();
        InterestRad = new javax.swing.JRadioButton();
        PVRad = new javax.swing.JRadioButton();
        PMTRad = new javax.swing.JRadioButton();
        FVRad = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        EndRad = new javax.swing.JRadioButton();
        BegRad = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        NeedTextPanelTF = new javax.swing.JTextPane();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(142, 198, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setForeground(new java.awt.Color(0, 153, 255));

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Clear");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        PeriodsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodsTFActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("N");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("I/YR");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("PV");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("PMT");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("FV");

        FVTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FVTFActionPerformed(evt);
            }
        });

        ResultTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResultTFActionPerformed(evt);
            }
        });

        jLabel7.setText("Result:");

        jLabel14.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        jLabel14.setText("4. Input Numbers In Remainding Fields Except For The Field With The Zero Then Click Calculate");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(324, 324, 324)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(ResultTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(449, 449, 449)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabel2)
                        .addGap(158, 158, 158)
                        .addComponent(jLabel3)
                        .addGap(127, 127, 127)
                        .addComponent(jLabel4)
                        .addGap(143, 143, 143)
                        .addComponent(jLabel5)
                        .addGap(140, 140, 140)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(PeriodsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(InterestTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(PVTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(PaymentTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(FVTF, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(195, 195, 195))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PeriodsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InterestTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PVTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PaymentTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FVTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ResultTF, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel1.setText("Financial Calculator");

        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(142, 198, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        PeriodsRad.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        PeriodsRad.setText("Periods (N)");
        PeriodsRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeriodsRadActionPerformed(evt);
            }
        });

        InterestRad.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        InterestRad.setText("Interest (I/YR)");
        InterestRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InterestRadActionPerformed(evt);
            }
        });

        PVRad.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        PVRad.setText("Present Value (PV)");
        PVRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PVRadActionPerformed(evt);
            }
        });

        PMTRad.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        PMTRad.setText("Payment (PMT)");
        PMTRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PMTRadActionPerformed(evt);
            }
        });

        FVRad.setFont(new java.awt.Font("Calibri", 0, 10)); // NOI18N
        FVRad.setText("Future Value (FV)");
        FVRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FVRadActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("Welcome to the Financial Calculator!");

        jLabel9.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel9.setText("1. Choose one to solve:");

        EndRad.setText("End");
        EndRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EndRadActionPerformed(evt);
            }
        });

        BegRad.setText("Beg");
        BegRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BegRadActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        jLabel10.setText("2. Must Choose (Beg/End): ");

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        jLabel12.setText("(End is set as default)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FVRad)
                    .addComponent(PMTRad)
                    .addComponent(PVRad)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PeriodsRad)
                            .addComponent(jLabel9)
                            .addComponent(InterestRad))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(BegRad)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(EndRad))
                                    .addComponent(jLabel12)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addComponent(jLabel10)))))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(PeriodsRad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(InterestRad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PVRad))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EndRad)
                            .addComponent(BegRad))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PMTRad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FVRad)
                .addGap(28, 28, 28))
        );

        jPanel3.setBackground(new java.awt.Color(142, 198, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 13)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("3.  Automatic Zeros and Other Requirements");

        NeedTextPanelTF.setFont(new java.awt.Font("Calibri", 0, 13)); // NOI18N
        jScrollPane1.setViewportView(NeedTextPanelTF);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jLabel13)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(177, 177, 177)
                .addComponent(jButton3)
                .addGap(34, 34, 34))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PeriodsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodsTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PeriodsTFActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    float n, i, pv, pmt, fv, result, newResult, FutVal, fvCF, PresVal, pvCF, resultPMT, resultN;
    // These are temporary variables VV
    float result1, result2, result3, result4;
    n = Float.parseFloat(PeriodsTF.getText());
    i = Float.parseFloat(InterestTF.getText());
    pv = Float.parseFloat(PVTF.getText());
    pmt = Float.parseFloat(PaymentTF.getText());
    fv = Float.parseFloat(FVTF.getText());
    

    //IF FVRAD IS SELECTED
        
    if(FVRad.isSelected()){
            
                       
            // if Future Value and Pmt are both zero then:
            if(fv == 0 && pmt == 0){
                FutVal = pv * (float)Math.pow((i + 1), n);
                ResultTF.setText(String.valueOf("The FV is: $" + FutVal));
            }
        
            // Else if only FV is equal to zero then compute for pmt as well
            else if(fv == 0){
                if (EndRad.isSelected()){
                FutVal = pv * (float)Math.pow((i + 1), n);
                fvCF = pmt * (float) (Math.pow((1 + i),n) - 1) / i;
                result = FutVal + fvCF;
                ResultTF.setText(String.valueOf("The FV is: $" + result));    
                }
                
                else if(BegRad.isSelected()){
                FutVal = pv * (float)Math.pow((i + 1), n);
                fvCF = pmt * (float) (Math.pow((1 + i),n) - 1) / i;
                result = FutVal + (fvCF *(1 + i));
                ResultTF.setText(String.valueOf("The FV is: $" + result));    
                }
            }
                
            else{
                ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!"));
                }
            
    }
        
 /* -------------------------------------------------------------------------------------------- */   
        // PVRAD IS SELECTED: 
        else if(PVRad.isSelected()){
        
            //If pv and pmt are both zero then calculate:
            if(pv == 0 && pmt == 0){
                result = fv / (float)Math.pow((i + 1), n);
                ResultTF.setText(String.valueOf("The PV is: $" + result));
            }
        
            // Else if only the PV is equal to zero then also compute for pmt
            else if(pv == 0){
                
                if (EndRad.isSelected()){
                    PresVal = fv / (float) Math.pow((i + 1), n);
                    pvCF = pmt * (float) (1 - (1 / Math.pow(1 + i, n))) / i;
                    result = PresVal + pvCF;
                    ResultTF.setText(String.valueOf("The PV is $" + result));
                }
                
                else if(BegRad.isSelected()){
                    PresVal = fv / (float) Math.pow((i + 1), n);
                    pvCF = pmt * (float) (1 - (1 / Math.pow(1 + i, n))) / i;
                    result = PresVal + (pvCF *(1 + i));
                    ResultTF.setText(String.valueOf("The PV is $" + result));
                }
        
                else{
                    ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!"));
                }
                
            }
            
            else{
               ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!")); 
            }
            
        }
        
/* -------------------------------------------------------------------------------------------- */
        
        //INTEREST RAD IS SELECTED
        else if(InterestRad.isSelected()){
            
            
            
            //If user only wants to know interest and has no payment. Not an annuity
            if(i == 0 && pmt == 0){
                result =  (float) Math.pow((fv/pv),1/n) -1;
                newResult = result * 100;
                ResultTF.setText(String.valueOf("The Interest is: " + newResult + "%"));
            }
            
            //If user wants to know interest, and pv = 0 (FV Annuity)
            else if(i == 0 && pv == 0){
                double firstfv;
                double secfv;
                double indicator = fv / pmt;
                double i1 = Math.random();
                double i2 = Math.random();
                
                //If the indicator is equal to periods then interest is just 0
                if((fv / pmt) == n){
                    ResultTF.setText(String.valueOf("Interest is 0.00"));
                }
                
                //These are all the exceptions and have no solutions
                else if(fv < pmt || fv < 1 || pmt < 1 || n < 1 || fv == pmt){
                    ResultTF.setText(String.valueOf("Make sure you input the correct numbers"));
                }
                
                
                //If indicator is less than periods then it will be a negative interest rate
                else if((fv / pmt) < n){
                    while(true){
                        i1 = Math.random() * -1;
                        firstfv = ( Math.pow((1 + i1),n) - 1) / i1;
                    
                        if(firstfv < indicator && firstfv > indicator - .0005){
                            System.out.println(firstfv);
                            break;
                        }
                    }    
                
                    while(true){
                        i2 = Math.random() * -1;
                        secfv = (Math.pow((1 + i2),n) - 1) / i2;
                    
                        if(secfv > indicator && secfv < indicator + .0005){
                            System.out.println(secfv);
                            break;
                        }
                        
                                          
                    }
                    
                    double interest = i1 + ((( indicator - firstfv) / (secfv - firstfv)) * (i2 - i1));
                    ResultTF.setText(String.valueOf("The Interest is: " + (interest * 100)));
                }
                
                
                //If indicator is greater than periods then it will be a positive interest rate
                else if(fv / pmt > n){
                    
                   //Refer to this to TryCalc to understand how the while loops work  
                   while(true){
                        i1 = Math.random();
                        firstfv = ( Math.pow((1 + i1),n) - 1) / i1;
                    
                        if(firstfv < indicator && firstfv > indicator - .005){
                            System.out.println(firstfv);
                            break;
                        }
                    }    
                
                    while(true){
                        i2 = Math.random();
                        secfv = (Math.pow((1 + i2),n) - 1) / i2;
                    
                        if(secfv > indicator && secfv < indicator + .005){
                            System.out.println(secfv);
                            break;
                        }    
                    }
            
                    double interest = i1 + ((( indicator - firstfv) / (secfv - firstfv)) * (i2 - i1));
                    ResultTF.setText(String.valueOf("The Interest is: " + (interest * 100)));
                }
                
                //If there is anything else that might cause there to be an error this else statement will filter it... Hopefully.
                else{
                    ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!")); 
                }
            }
            
            else if(i == 0 && fv == 0){
                double firstpv;
                double secpv;
                double indicator = pv / pmt;
                double i1 = Math.random();
                double i2 = Math.random();
                
                //If the indicator is equal to periods then interest is just 0
                if((fv / pmt) == n){
                    ResultTF.setText(String.valueOf("Interest is 0.00"));
                }
                
                //These are all the exceptions and have no solutions
                else if(pv < 1 || pmt < 1 || n < 1){
                    ResultTF.setText(String.valueOf("Make sure you input the correct numbers"));
                }
                
                
                //If indicator is less than periods then it will be a negative interest rate
                else if( (float) (pv / pmt) > n){
                    while(true){
                        i1 = Math.random() * -1;
                        firstpv = (1 - Math.pow((1 + i1),-n)) / i1;
                    
                        if(firstpv < indicator && firstpv > indicator - .0005){
                            System.out.println(firstpv);
                            break;
                        }
                    }    
                
                    while(true){
                        i2 = Math.random() * -1;
                        secpv = (1 - Math.pow((1 + i2),-n)) / i2;
                    
                        if(secpv > indicator && secpv < indicator + .0005){
                            System.out.println(secpv);
                            break;
                        }
                                     
                    }
                    
                    double interest = i1 + ((( indicator - firstpv) / (secpv - firstpv)) * (i2 - i1));
                    ResultTF.setText(String.valueOf("The Interest is: " + (interest * 100)));
                }
                
                
                //If indicator is greater than periods then it will be a positive interest rate
                else if(pv > pmt){
                    
                   //Refer to this to TryCalc to understand how the while loops work  
                   while(true){
                        i1 = Math.random();
                        firstpv = (1 - Math.pow((1 + i1),-n)) / i1;
                    
                        if(firstpv < indicator && firstpv > indicator - .005){
                            System.out.println(firstpv);
                            break;
                        }
                    }    
                
                    while(true){
                        i2 = Math.random();
                        secpv = (1 - Math.pow((1 + i2),-n)) / i2;
                    
                        if(secpv > indicator && secpv < indicator + .005){
                            System.out.println(secpv);
                            break;
                        }    
                    }
            
                    double interest = i1 + ((( indicator - firstpv) / (secpv - firstpv)) * (i2 - i1));
                    ResultTF.setText(String.valueOf("The Interest is: " + (interest * 100)));
                }
                
                else if(pv < pmt){
                    
                   //Refer to this to TryCalc to understand how the while loops work  
                   while(true){
                        i1 = Math.random() + 1;
                        firstpv = (1 - Math.pow((1 + i1),-n)) / i1;
                    
                        if(firstpv < indicator && firstpv > indicator - .005){
                            System.out.println(firstpv);
                            break;
                        }
                    }    
                
                    while(true){
                        i2 = Math.random() + 1;
                        secpv = (1 - Math.pow((1 + i2),-n)) / i2;
                    
                        if(secpv > indicator && secpv < indicator + .005){
                            System.out.println(secpv);
                            break;
                        }    
                    }
            
                    double interest = i1 + ((( indicator - firstpv) / (secpv - firstpv)) * (i2 - i1));
                    ResultTF.setText(String.valueOf("The Interest is: " + (interest * 100)));
                }
                
                //If there is anything else that might cause there to be an error this else statement will filter it... Hopefully.
                else{
                    ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!")); 
                }
            }
            
        }
/* ------------------------------------------------------------------------------------------------------- */
        
        // PERIOD RAD IS SELECTED
        else if(PeriodsRad.isSelected()){
                                 
            //End Rad is selected within the Period Rad selection
            if(EndRad.isSelected()){
                //If the user doesn't know the period and there is no payment
                if(n == 0 && pmt == 0){
                    result = (float) Math.log((fv / pv)) / (float) Math.log((1 + i));
                    ResultTF.setText(String.valueOf("The periods are: " + result));
                } 
                
                /*The user doesn't know the periods. and has a PMT but may have no pv or no fv or may have
                both*/
                else if(n == 0){
                    
                    //IF N and PV are both zero:
                    result = (float) Math.log((i * fv) / pmt + 1);
                    newResult = (float) Math.log(i + 1);
                    resultN = result / newResult;
                    
                    //If N and FV are both zero:
                    result1 = (float) Math.log(1 - (pv * i) / pmt);
                    result2 = (float) Math.log(i + 1);
                    result3 = (-1) * result1 / result2;
                    
                    //If N is Zero but user knows FV and PV:
                    result4 = resultN + result3;
                    ResultTF.setText(String.valueOf("The periods are: " + result4));
                }
                
                else{
                ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!")); 
                }
            }
            
            //If begin radio button is selected for the periods this takes place
            else if(BegRad.isSelected()){
                //If the user doesn't know the period and there is no payment
                if(n == 0 && pmt == 0){
                    result = (float) Math.log((fv / pv)) / (float) Math.log((1 + i));
                    ResultTF.setText(String.valueOf("The periods are: " + result));
                }
                
                //If the user doesn't know the period
                else if(n == 0){
                    
                    //If the user does not know the Period and PV is zero
                    result = (float) Math.log((i * fv) / pmt + 1);
                    newResult = (float) Math.log(i + 1);
                    resultN = result / newResult;
                    
                    //If the user does not know the period and FV is zero
                    result1 = (float) Math.log(1 - (pv * i) / pmt);
                    result2 = (float) Math.log(i + 1);
                    result3 = (-1) * result1 / result2;
                    
                    //If the user does not know the period and PV and FV are known
                    result4 = resultN + result3;
                    ResultTF.setText(String.valueOf("The periods are: " + result4 / (1 + i)));
                }
                
                else{
                ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!")); 
                } 
            }
            
            else{
               ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!")); 
            }
        }
        
/* ------------------------------------------------------------------------------------------------------- */        
        
        //This is if PMT radio button is selected
        else if(PMTRad.isSelected()){
            
            //If we don't know what pv value is in order to find PMT
            if(pmt == 0 && pv == 0){
                
                if(BegRad.isSelected()){
                result = fv / (float) ((Math.pow((1 + i), n) -1) / i);
                resultPMT = result / (1 + i);
                ResultTF.setText(String.valueOf("The payment is: $" + resultPMT));
                }
                
                else if(EndRad.isSelected()){
                result = fv / (float) ((Math.pow((1 + i), n) -1) / i);
                ResultTF.setText(String.valueOf("The payment is: $" + result));
                }
                
            }
            
            //If we don't know what fv is to find PMT
            else if(pmt == 0 && fv == 0){
                if(BegRad.isSelected()){
                result = (i * pv) / (1 - (float) Math.pow((1 + i), -n));
                resultPMT = result / (1 + i);
                ResultTF.setText(String.valueOf("The payment is: $" + resultPMT));
                }
                
                else if(EndRad.isSelected()){
                result = (i * pv) / (1 - (float) Math.pow((1 + i), -n));
                ResultTF.setText(String.valueOf("The payment is: $" + result));
                }
            }
           
            //We use this one if we know both PV and FV in order to find PMT
            else if(pmt == 0){
                
                if(BegRad.isSelected()){
                result = (i * pv) / (1 - (float) Math.pow((1 + i), -n));
                newResult = fv / (float) ((Math.pow((1 + i), n) -1) / i);
                resultPMT = (newResult - result) / (1 + i);
                ResultTF.setText(String.valueOf("The payment is: $" + resultPMT));
                }
                
                else if(EndRad.isSelected()){
                result = (i * pv) / (1 - (float) Math.pow((1 + i), -n));
                newResult = fv / (float) ((Math.pow((1 + i), n) -1) / i);
                resultPMT = newResult - result;
                ResultTF.setText(String.valueOf("The payment is: $" + resultPMT));
                }
            }
            
            else{
                ResultTF.setText(String.valueOf("Make Sure All Inputs Are Correct!")); 
            }
        }
        
        else{
            ResultTF.setText(String.valueOf("Error! Try inputting the numbers again"));
            }    
    }//GEN-LAST:event_jButton1ActionPerformed

 /* ------------------------------------------------------------------------------------------------------- */   
    
        
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    PeriodsTF.setText("");
    InterestTF.setText("");
    PVTF.setText("");
    PaymentTF.setText("");
    FVTF.setText("");
    ResultTF.setText("");
    InterestRad.setSelected(false);
    FVRad.setSelected(false);
    PVRad.setSelected(false);
    PMTRad.setSelected(false);
    PeriodsRad.setSelected(false);
    BegRad.setSelected(false);
    EndRad.setSelected(false);
    NeedTextPanelTF.setText("");
    
    
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ResultTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResultTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ResultTFActionPerformed

    private void PVRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PVRadActionPerformed
    if(PVRad.isSelected()){
        PMTRad.setSelected(false);
        PeriodsRad.setSelected(false);
        FVRad.setSelected(false);
        InterestRad.setSelected(false);
        EndRad.setSelected(true);
        BegRad.setSelected(false);
        PVTF.setText(String.valueOf("0"));
            FVTF.setText(String.valueOf(""));
            InterestTF.setText(String.valueOf(""));
            PeriodsTF.setText(String.valueOf(""));
            PaymentTF.setText(String.valueOf(""));
    }
    
    if(PVRad.isSelected()){
        NeedTextPanelTF.setText(String.valueOf("\tYou Chose Present Value \n   A Zero Automatically Populates Under PV"
            + "\n\nYou Must Input Numbers for: " + "\nPeriods \nInterest (Must be as a decimal) "
            + "\nPayment \nFuture Value"));
    }
    
    }//GEN-LAST:event_PVRadActionPerformed

    private void BegRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BegRadActionPerformed
    if(BegRad.isSelected()){
        EndRad.setSelected(false);  
    }
    }//GEN-LAST:event_BegRadActionPerformed

    private void PeriodsRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeriodsRadActionPerformed
    if(PeriodsRad.isSelected()){
        PMTRad.setSelected(false);
        InterestRad.setSelected(false);
        FVRad.setSelected(false);
        PVRad.setSelected(false);
        EndRad.setSelected(true);
        BegRad.setSelected(false);
        PeriodsTF.setText(String.valueOf("0"));
            PVTF.setText(String.valueOf(""));
            InterestTF.setText(String.valueOf(""));
            FVTF.setText(String.valueOf(""));
            PaymentTF.setText(String.valueOf(""));
    }
    
    if(PeriodsRad.isSelected()){
        NeedTextPanelTF.setText(String.valueOf("\tYou Chose Periods \n   A Zero Automatically Populates Under N "
            + "\n\nYou Must Input Numbers for: " + "\nInterest (Must be as a decimal) "
            + "\nPayment \nPresent Value \nFuture Value"));
        
    }    
    }//GEN-LAST:event_PeriodsRadActionPerformed
        
    
    private void InterestRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InterestRadActionPerformed
    if(InterestRad.isSelected()){
        PMTRad.setSelected(false);
        PeriodsRad.setSelected(false);
        FVRad.setSelected(false);
        PVRad.setSelected(false);
        EndRad.setSelected(true);
        BegRad.setSelected(false);
        InterestTF.setText(String.valueOf("0"));
            PVTF.setText(String.valueOf(""));
            FVTF.setText(String.valueOf(""));
            PeriodsTF.setText(String.valueOf(""));
            PaymentTF.setText(String.valueOf(""));
    }
    
    if(InterestRad.isSelected()){
        NeedTextPanelTF.setText(String.valueOf("\tYou Chose Interest (I/YR) \n   A Zero Automatically Populates Under I/YR "
            + "\n\nYou Must Input Numbers for: " + "\nPeriods "
            + "\nPresent Value \nPayment \nFuture Value"));
    }
    }//GEN-LAST:event_InterestRadActionPerformed

    private void PMTRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PMTRadActionPerformed
    if(PMTRad.isSelected()){
        InterestRad.setSelected(false);
        PeriodsRad.setSelected(false);
        FVRad.setSelected(false);
        PVRad.setSelected(false);
        EndRad.setSelected(true);
        BegRad.setSelected(false);
        PaymentTF.setText(String.valueOf("0"));
            PVTF.setText(String.valueOf(""));
            InterestTF.setText(String.valueOf(""));
            PeriodsTF.setText(String.valueOf(""));
            FVTF.setText(String.valueOf(""));
    }
    
    if(PMTRad.isSelected()){
        NeedTextPanelTF.setText(String.valueOf("\tYou Chose Payment \n   A Zero Automatically Populates Under PMT "
            + "\n\nYou Must Input Numbers for: " + "\nPeriods \nInterest (Must be as a decimal) "
            + "\nPresent Value \nFuture Value"));
    }
    
    }//GEN-LAST:event_PMTRadActionPerformed

    private void FVRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FVRadActionPerformed
    if(FVRad.isSelected()){
        PMTRad.setSelected(false);
        PeriodsRad.setSelected(false);
        InterestRad.setSelected(false);
        PVRad.setSelected(false);
        EndRad.setSelected(true);
        BegRad.setSelected(false);
        FVTF.setText(String.valueOf("0"));
            PVTF.setText(String.valueOf(""));
            InterestTF.setText(String.valueOf(""));
            PeriodsTF.setText(String.valueOf(""));
            PaymentTF.setText(String.valueOf(""));
    }
    
    if(FVRad.isSelected()){
        NeedTextPanelTF.setText(String.valueOf("\tYou Chose Future Value \n   A Zero Automatically Populates Under FV "
            + "\n\nYou Must Input Numbers for: " + "\nPeriods \nInterest (Must be as a decimal) "
            + "\nPresent Value \nPayment"));    
    }
    
    }//GEN-LAST:event_FVRadActionPerformed

    private void EndRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EndRadActionPerformed
          
    if(EndRad.isSelected()){
        BegRad.setSelected(false);
    }
    }//GEN-LAST:event_EndRadActionPerformed

    private void FVTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FVTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FVTFActionPerformed
        
        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Fin_Calc2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Fin_Calc2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Fin_Calc2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Fin_Calc2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fin_Calc2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton BegRad;
    private javax.swing.JRadioButton EndRad;
    private javax.swing.JRadioButton FVRad;
    private javax.swing.JTextField FVTF;
    private javax.swing.JRadioButton InterestRad;
    private javax.swing.JTextField InterestTF;
    private javax.swing.JTextPane NeedTextPanelTF;
    private javax.swing.JRadioButton PMTRad;
    private javax.swing.JRadioButton PVRad;
    private javax.swing.JTextField PVTF;
    private javax.swing.JTextField PaymentTF;
    private javax.swing.JRadioButton PeriodsRad;
    private javax.swing.JTextField PeriodsTF;
    private javax.swing.JTextField ResultTF;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    
}

